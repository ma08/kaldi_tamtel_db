# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/9.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/8.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/9.mdl 
# Started at Wed Jun 15 05:53:26 UTC 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/9.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 3800
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9533872
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=3800
output-node name=output input=output.affine dim=3800 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=3800
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=3800 output-dim=3800
output-node name=output-xent input=output-xent.log-softmax dim=3800 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00678, bias-{mean,stddev}=-0.001585,0.01579
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.037, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.35,0.35,0.36 0.37,0.38,0.50,0.61,0.74 0.86,1.0,1.1,1.8), mean=0.522, stddev=0.169], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.88,0.89,0.91 0.92,0.95,1.1,1.3,1.4 1.6,1.7,1.7,1.8), mean=1.16, stddev=0.216], bias-{mean,stddev}=0.0006047,0.2733, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.09e+06, self-repaired-proportion=0.613495, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,3e-07,0.04,0.19,0.36 0.51,0.65,0.75,1.2), mean=0.116, stddev=0.176], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,3e-05,0.43,0.99,1.0 1.0,1.0,1.0,1.0), mean=0.471, stddev=0.436], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.03 0.03,0.03,0.04,0.06,0.07 0.08,0.10,0.12,0.21), mean=0.0486, stddev=0.0204], oderiv-count=4.56877e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47343.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,8e-07,0.05,0.18,0.34 0.48,0.62,0.71,1.2), mean=0.11, stddev=0.165], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0001,0.05,0.09,0.09 0.10,0.11,0.12,0.18), mean=0.0451, stddev=0.0397]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02558, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.16, stddev=0.00218], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.20,0.20,0.21 0.22,0.23,0.28,0.32,0.35 0.39,0.43,0.45,0.57), mean=0.284, stddev=0.0558], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02838, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.32,0.33,0.36 0.38,0.40,0.44,0.50,0.53 0.56,0.61,0.64,0.87), mean=0.449, stddev=0.0652], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.84,0.84,0.86 0.86,0.88,0.90,0.94,0.95 0.96,0.98,0.99,1.0), mean=0.908, stddev=0.0344], bias-{mean,stddev}=-0.02007,0.3698, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.99e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.09,0.12 0.17,0.22,0.35,0.51,0.61 0.70,0.82,0.85,1.1), mean=0.374, stddev=0.177], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.14,0.17,0.22 0.26,0.32,0.49,0.65,0.75 0.82,0.88,0.90,0.93), mean=0.497, stddev=0.181], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.007,0.007,0.009), mean=0.00338, stddev=0.00123], oderiv-count=4.52996e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46831.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.10,0.12 0.17,0.23,0.35,0.50,0.59 0.69,0.79,0.83,1.1), mean=0.372, stddev=0.169], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.26,0.28,0.34 0.38,0.43,0.53,0.61,0.66 0.70,0.73,0.76,0.90), mean=0.522, stddev=0.109]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02078, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.94,0.94,0.94 0.94,0.94,0.94,0.94,0.94 0.94,0.94,0.94,0.94), mean=0.94, stddev=0.00166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.23,0.25,0.27 0.28,0.30,0.31,0.40), mean=0.234, stddev=0.0275], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02628, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.35,0.36 0.38,0.39,0.42,0.45,0.46 0.47,0.50,0.51,0.62), mean=0.419, stddev=0.0355], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.79,0.79,0.80 0.81,0.82,0.84,0.86,0.87 0.88,0.89,0.90,0.95), mean=0.841, stddev=0.026], bias-{mean,stddev}=-0.01329,0.3674, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.92e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.08,0.10,0.13 0.17,0.22,0.37,0.54,0.65 0.74,0.82,0.90,1.1), mean=0.392, stddev=0.186], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.14,0.16,0.22 0.27,0.33,0.49,0.63,0.72 0.77,0.83,0.84,0.93), mean=0.488, stddev=0.168], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.004 0.004,0.004,0.005,0.01), mean=0.00248, stddev=0.000885], oderiv-count=4.55878e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46319.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.10,0.14 0.18,0.23,0.37,0.53,0.64 0.71,0.80,0.86,1.1), mean=0.388, stddev=0.177], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.29,0.32,0.38 0.42,0.47,0.57,0.65,0.69 0.73,0.77,0.80,0.89), mean=0.562, stddev=0.109]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01856, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.84, stddev=0.00142], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.17,0.18 0.19,0.19,0.21,0.22,0.23 0.24,0.25,0.27,0.33), mean=0.209, stddev=0.0199], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02576, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.35,0.36,0.37 0.38,0.39,0.41,0.43,0.45 0.46,0.47,0.48,0.52), mean=0.411, stddev=0.0278], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.76,0.77,0.78 0.79,0.80,0.82,0.85,0.86 0.87,0.88,0.88,0.89), mean=0.824, stddev=0.0253], bias-{mean,stddev}=-0.002358,0.398, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.83e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.08,0.10,0.14 0.18,0.24,0.38,0.57,0.70 0.81,0.92,1.0,1.5), mean=0.413, stddev=0.207], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.12,0.16,0.21 0.25,0.33,0.48,0.64,0.72 0.78,0.82,0.84,0.92), mean=0.486, stddev=0.172], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.005,0.006 0.006,0.007,0.008,0.02), mean=0.00399, stddev=0.00123], oderiv-count=1.46758e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15439.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.11,0.14 0.19,0.24,0.38,0.55,0.68 0.79,0.89,0.98,1.5), mean=0.406, stddev=0.198], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.31,0.35,0.39 0.45,0.49,0.59,0.68,0.73 0.79,0.83,0.86,0.99), mean=0.589, stddev=0.116]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02228, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.71,0.71,0.71 0.71,0.71,0.71,0.71,0.71 0.71,0.72,0.72,0.72), mean=0.713, stddev=0.000977], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.22 0.23,0.24,0.25,0.27,0.27 0.28,0.29,0.30,0.32), mean=0.251, stddev=0.0185], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.03474, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.32,0.32,0.34 0.35,0.37,0.39,0.42,0.43 0.44,0.46,0.46,0.49), mean=0.392, stddev=0.0318], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.1,1.1 1.2,1.2,1.2,1.2), mean=1.11, stddev=0.0269], bias-{mean,stddev}=-0.005731,0.3773, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.03e+06, self-repaired-proportion=0.00279525, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.04,0.06,0.10 0.13,0.17,0.30,0.50,0.62 0.74,0.88,0.93,1.3), mean=0.344, stddev=0.203], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.08,0.11,0.18 0.23,0.30,0.46,0.66,0.73 0.80,0.87,0.92,0.94), mean=0.476, stddev=0.194], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.004,0.005,0.006,0.007 0.008,0.01,0.01,0.04), mean=0.00502, stddev=0.0022], oderiv-count=1.50038e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15439.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.04,0.06,0.09 0.13,0.17,0.29,0.48,0.60 0.71,0.85,0.89,1.2), mean=0.333, stddev=0.195], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.19,0.22,0.29 0.32,0.37,0.47,0.57,0.62 0.65,0.70,0.72,0.84), mean=0.468, stddev=0.116]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01803, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.816, stddev=0.00127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.17,0.18 0.18,0.19,0.20,0.22,0.23 0.23,0.24,0.25,0.29), mean=0.203, stddev=0.0171], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02594, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.36,0.36,0.37 0.38,0.39,0.41,0.43,0.44 0.45,0.46,0.47,0.49), mean=0.414, stddev=0.0238], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.77,0.78,0.78 0.80,0.81,0.83,0.85,0.86 0.87,0.89,0.90,0.92), mean=0.83, stddev=0.0276], bias-{mean,stddev}=-0.02088,0.3616, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.21e+05, self-repaired-proportion=4.28049e-06, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.10,0.15 0.19,0.25,0.38,0.56,0.67 0.76,0.86,0.92,1.4), mean=0.413, stddev=0.193], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.16,0.21 0.27,0.33,0.48,0.61,0.68 0.73,0.77,0.81,0.92), mean=0.475, stddev=0.157], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.005 0.006,0.007,0.008,0.01), mean=0.00383, stddev=0.00128], oderiv-count=1.44221e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14927.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.11,0.15 0.19,0.25,0.38,0.55,0.65 0.73,0.83,0.88,1.3), mean=0.405, stddev=0.184], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.32,0.34,0.40 0.46,0.51,0.61,0.70,0.75 0.79,0.84,0.86,1.0), mean=0.604, stddev=0.116]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0185, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.837, stddev=0.00104], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.19,0.19,0.21,0.22,0.23 0.24,0.25,0.26,0.28), mean=0.209, stddev=0.0179], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02617, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.36,0.37,0.38 0.39,0.40,0.42,0.44,0.45 0.46,0.46,0.47,0.50), mean=0.418, stddev=0.024], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.78,0.79,0.79 0.80,0.82,0.83,0.86,0.87 0.89,0.90,0.91,0.94), mean=0.837, stddev=0.0287], bias-{mean,stddev}=-0.004313,0.3868, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.36e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.10,0.11,0.15 0.18,0.25,0.39,0.59,0.70 0.83,0.95,1.0,1.3), mean=0.424, stddev=0.21], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.17,0.22 0.26,0.33,0.48,0.63,0.70 0.75,0.81,0.84,0.91), mean=0.482, stddev=0.164], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.003,0.004,0.005,0.006 0.006,0.007,0.008,0.01), mean=0.00383, stddev=0.00129], oderiv-count=1.37966e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14415.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.12,0.15 0.19,0.25,0.38,0.58,0.68 0.80,0.92,1.0,1.3), mean=0.418, stddev=0.201], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.34,0.37,0.42 0.45,0.50,0.61,0.72,0.77 0.82,0.86,0.89,1.0), mean=0.612, stddev=0.123]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01901, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.86,0.86,0.86 0.86,0.86,0.86,0.86,0.86 0.86,0.86,0.86,0.86), mean=0.86, stddev=0.000946], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.18,0.18 0.19,0.20,0.21,0.23,0.24 0.25,0.26,0.27,0.33), mean=0.214, stddev=0.0203], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02639, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.37,0.38,0.38 0.39,0.40,0.42,0.44,0.45 0.46,0.47,0.48,0.52), mean=0.422, stddev=0.0238], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.78,0.79,0.80 0.81,0.82,0.84,0.87,0.88 0.89,0.90,0.92,0.93), mean=0.844, stddev=0.0276], bias-{mean,stddev}=-0.02072,0.3939, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.91e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.10,0.13 0.19,0.25,0.40,0.58,0.70 0.81,0.98,1.1,1.3), mean=0.425, stddev=0.209], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.13,0.15,0.21 0.26,0.34,0.48,0.62,0.70 0.74,0.80,0.83,0.86), mean=0.478, stddev=0.163], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.003,0.005,0.005 0.006,0.008,0.009,0.02), mean=0.0038, stddev=0.00142], oderiv-count=1.33547e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13903.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.10,0.14 0.19,0.25,0.39,0.57,0.69 0.79,0.95,1.0,1.3), mean=0.419, stddev=0.2], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.31,0.35,0.40 0.44,0.51,0.62,0.71,0.76 0.80,0.85,0.89,0.95), mean=0.611, stddev=0.122]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01952, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88,0.88 0.88,0.88,0.89,0.89), mean=0.883, stddev=0.00088], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.18,0.19 0.19,0.20,0.22,0.23,0.25 0.26,0.27,0.28,0.36), mean=0.22, stddev=0.022], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02673, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.37,0.38,0.39 0.40,0.41,0.43,0.45,0.46 0.47,0.48,0.49,0.51), mean=0.427, stddev=0.024], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.78,0.79,0.81 0.82,0.83,0.85,0.88,0.89 0.90,0.92,0.94,0.95), mean=0.855, stddev=0.0306], bias-{mean,stddev}=-0.01393,0.3842, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.76e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.10,0.11,0.15 0.19,0.26,0.41,0.59,0.71 0.79,0.91,0.99,1.4), mean=0.436, stddev=0.201], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.15,0.18,0.21 0.27,0.33,0.48,0.62,0.68 0.72,0.79,0.82,0.90), mean=0.479, stddev=0.157], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.006,0.007,0.008,0.01), mean=0.00356, stddev=0.00124], oderiv-count=1.30239e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13391.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.10,0.12,0.15 0.20,0.26,0.41,0.58,0.69 0.77,0.88,0.95,1.3), mean=0.429, stddev=0.193], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.33,0.37,0.43 0.48,0.53,0.64,0.73,0.78 0.82,0.87,0.89,0.98), mean=0.633, stddev=0.12]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02006, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.91,0.91,0.91 0.91,0.91,0.91,0.91,0.91 0.91,0.91,0.91,0.91), mean=0.908, stddev=0.000946], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.22,0.24,0.25 0.26,0.28,0.29,0.39), mean=0.226, stddev=0.0225], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02712, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.38,0.38,0.39 0.40,0.41,0.43,0.45,0.46 0.47,0.48,0.49,0.51), mean=0.433, stddev=0.0248], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.80,0.81,0.82 0.82,0.84,0.87,0.89,0.91 0.92,0.95,0.96,0.97), mean=0.867, stddev=0.0344], bias-{mean,stddev}=0.01799,0.3853, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.8e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.15,0.20 0.23,0.29,0.44,0.64,0.74 0.85,0.98,1.1,1.3), mean=0.471, stddev=0.205], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.18,0.21,0.25 0.30,0.35,0.49,0.63,0.69 0.74,0.79,0.82,0.90), mean=0.492, stddev=0.151], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.004 0.005,0.005,0.006,0.01), mean=0.00323, stddev=0.000907], oderiv-count=1.28188e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12879.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.16,0.20 0.24,0.29,0.44,0.63,0.72 0.83,0.95,1.0,1.2), mean=0.465, stddev=0.197], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.42,0.44,0.49 0.52,0.57,0.67,0.77,0.82 0.86,0.92,0.95,1.1), mean=0.673, stddev=0.116]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02072, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.94,0.94 0.94,0.94,0.94,0.94,0.94 0.94,0.94,0.94,0.94), mean=0.938, stddev=0.000772], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.19,0.20 0.21,0.21,0.23,0.25,0.26 0.27,0.29,0.30,0.34), mean=0.233, stddev=0.0226], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02748, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.37,0.39,0.40 0.41,0.42,0.44,0.46,0.47 0.48,0.49,0.50,0.54), mean=0.439, stddev=0.0262], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.81,0.82,0.83 0.84,0.85,0.87,0.91,0.93 0.94,0.96,0.96,0.99), mean=0.879, stddev=0.0359], bias-{mean,stddev}=-0.02589,0.3944, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.38e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.15,0.19 0.23,0.29,0.45,0.64,0.74 0.84,0.92,1.0,1.3), mean=0.47, stddev=0.202], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.17,0.20,0.24 0.28,0.33,0.47,0.60,0.67 0.72,0.76,0.79,0.88), mean=0.472, stddev=0.149], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.005,0.005,0.006,0.01), mean=0.00308, stddev=0.000893], oderiv-count=1.19221e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12367.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.15,0.20 0.23,0.29,0.45,0.63,0.72 0.82,0.89,0.97,1.3), mean=0.465, stddev=0.195], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.38,0.43,0.49 0.54,0.59,0.71,0.80,0.85 0.89,0.94,0.98,1.1), mean=0.697, stddev=0.123]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02137, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.97,0.97 0.97,0.97,0.97,0.97,0.97 0.97,0.97,0.97,0.97), mean=0.967, stddev=0.000646], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.20,0.20,0.21 0.21,0.22,0.24,0.26,0.27 0.28,0.30,0.31,0.36), mean=0.241, stddev=0.0242], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0278, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.37,0.38,0.40 0.41,0.42,0.45,0.47,0.48 0.49,0.50,0.51,0.57), mean=0.444, stddev=0.0277], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.81,0.83,0.83 0.84,0.86,0.89,0.92,0.93 0.95,0.96,0.97,0.99), mean=0.889, stddev=0.0341], bias-{mean,stddev}=-0.01515,0.3829, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.84e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.15,0.18,0.22 0.26,0.33,0.48,0.65,0.76 0.88,1.0,1.1,1.3), mean=0.5, stddev=0.199], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.18,0.22,0.25 0.29,0.35,0.47,0.59,0.65 0.70,0.75,0.78,0.92), mean=0.475, stddev=0.137], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.004,0.005,0.009), mean=0.00286, stddev=0.000677], oderiv-count=1.15581e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11855.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.15,0.18,0.22 0.26,0.33,0.48,0.65,0.75 0.85,0.97,1.0,1.2), mean=0.495, stddev=0.192], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.45,0.50,0.55 0.59,0.65,0.74,0.85,0.90 0.94,0.99,1.0,1.1), mean=0.744, stddev=0.121]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02223, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.0,1.0,1.0 1.0,1.0,1.0,1.0,1.0 1.0,1.0,1.0,1.0), mean=1.01, stddev=0.000846], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.20,0.20,0.21 0.22,0.23,0.25,0.27,0.28 0.30,0.32,0.33,0.44), mean=0.25, stddev=0.0271], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02784, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.37,0.38,0.40 0.41,0.42,0.45,0.47,0.48 0.49,0.50,0.50,0.52), mean=0.445, stddev=0.0275], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.81,0.82,0.84 0.85,0.86,0.89,0.92,0.94 0.95,0.96,0.97,0.99), mean=0.89, stddev=0.0346], bias-{mean,stddev}=-0.01113,0.3796, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.42e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.18,0.20,0.25 0.29,0.35,0.51,0.71,0.80 0.89,0.98,1.1,1.3), mean=0.533, stddev=0.2], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.20,0.22,0.26 0.31,0.36,0.47,0.59,0.64 0.68,0.73,0.76,0.83), mean=0.474, stddev=0.127], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.003 0.004,0.004,0.004,0.005), mean=0.00262, stddev=0.000525], oderiv-count=1.104e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11343.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.18,0.21,0.25 0.29,0.36,0.51,0.69,0.79 0.87,0.96,1.0,1.2), mean=0.529, stddev=0.192], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.52,0.55,0.60 0.64,0.70,0.80,0.91,0.97 1.0,1.1,1.1,1.2), mean=0.806, stddev=0.128]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, params-rms=0.03049, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.97,0.97 0.97,0.98,0.98,0.98,0.98 0.98,0.98,0.98,0.98), mean=0.976, stddev=0.000598], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.44,0.45 0.45,0.47,0.49,0.51,0.52 0.53,0.54,0.55,0.60), mean=0.487, stddev=0.0259], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02766, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.37,0.37,0.38 0.39,0.41,0.44,0.47,0.49 0.50,0.51,0.52,0.57), mean=0.441, stddev=0.036], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.82,0.83,0.83 0.84,0.86,0.89,0.90,0.92 0.93,0.95,0.95,0.97), mean=0.885, stddev=0.0292], bias-{mean,stddev}=-0.0142,0.3868, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.28e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.15,0.18,0.23 0.29,0.36,0.52,0.71,0.82 0.92,1.0,1.1,1.3), mean=0.543, stddev=0.214], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.17,0.19,0.24 0.29,0.34,0.44,0.55,0.60 0.65,0.72,0.75,0.80), mean=0.445, stddev=0.124], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.005,0.006,0.007,0.008), mean=0.00332, stddev=0.00101], oderiv-count=1.09584e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11343.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.15,0.18,0.23 0.29,0.36,0.52,0.70,0.81 0.91,1.0,1.1,1.3), mean=0.538, stddev=0.207], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.49,0.54,0.63 0.71,0.78,0.93,1.1,1.2 1.2,1.3,1.4,1.6), mean=0.929, stddev=0.182]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, params-rms=0.02872, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.92,0.92,0.92 0.92,0.92,0.92,0.92,0.92 0.92,0.92,0.92,0.92), mean=0.919, stddev=0.00124], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.38,0.39,0.40 0.41,0.43,0.46,0.49,0.51 0.52,0.53,0.54,0.58), mean=0.458, stddev=0.0354], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11343.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6e-08,-4e-08,-3e-08,-3e-08 -2e-08,-1e-08,1e-10,1e-08,2e-08 2e-08,4e-08,4e-08,5e-08), mean=2.49e-11, stddev=1.62e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.3,1.3,1.4,1.5,1.5 1.6,1.6,1.6,1.7), mean=1.4, stddev=0.0964]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3800, learning-rate=0.000899226, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.02485, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-10,4e-10,4e-10,5e-10 0.03,0.07,0.39,0.55,0.59 0.61,0.64,0.65,0.76), mean=0.337, stddev=0.212], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.2,1.3 1.4,1.4,1.5,1.6,1.7 1.8,1.8,1.8,2.0), mean=1.53, stddev=0.147], bias-{mean,stddev}=0.001224,0.1082, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02684, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.35,0.36,0.38 0.39,0.41,0.43,0.45,0.46 0.47,0.48,0.48,0.54), mean=0.429, stddev=0.029], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.80,0.80,0.81 0.82,0.83,0.86,0.88,0.90 0.91,0.92,0.93,0.97), mean=0.858, stddev=0.0303], bias-{mean,stddev}=-0.01191,0.3735, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.33e+05, self-repaired-proportion=0.00585938, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.11,0.13,0.18 0.23,0.29,0.43,0.61,0.74 0.81,0.96,1.0,1.3), mean=0.458, stddev=0.199], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.15,0.18,0.23 0.29,0.35,0.48,0.61,0.67 0.72,0.77,0.81,0.90), mean=0.478, stddev=0.149], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.005,0.03), mean=0.0025, stddev=0.00183], oderiv-count=1.09569e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11343.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.10,0.13,0.18 0.22,0.28,0.43,0.60,0.72 0.79,0.93,0.98,1.3), mean=0.45, stddev=0.193], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.36,0.39,0.47 0.50,0.56,0.65,0.75,0.80 0.84,0.89,0.92,1.1), mean=0.654, stddev=0.125]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, params-rms=0.02468, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.79, stddev=0.000423], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.32,0.33,0.34 0.36,0.37,0.39,0.42,0.43 0.44,0.45,0.46,0.50), mean=0.394, stddev=0.0294], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11343.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-4e-08,-3e-08,-2e-08 -2e-08,-1e-08,-2e-09,1e-08,2e-08 2e-08,3e-08,4e-08,4e-08), mean=-8.22e-10, stddev=1.36e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.77,0.77,0.78 0.79,0.80,0.84,0.88,0.91 0.93,0.95,0.95,1.0), mean=0.846, stddev=0.0462]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3800, learning-rate=0.00449613, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.04735, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.03 0.03,0.04,0.77,1.0,1.1 1.2,1.3,1.3,1.7), mean=0.61, stddev=0.449], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.6,2.7,2.7,2.7 2.8,2.8,2.9,3.0,3.1 3.1,3.1,3.2,3.2), mean=2.92, stddev=0.121], bias-{mean,stddev}=2.488e-08,0.1149, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=3800, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 3e-05,6e-05,0.0006,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000871, stddev=0.0012], oderiv-count=1.0818e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/8.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/9.mdl 
LOG (nnet3-show-progress[5.5.1009~1-e4940]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:2.80992 tdnnf2.linear:1.44666 tdnnf2.affine:1.95461 tdnnf3.linear:1.30899 tdnnf3.affine:1.79436 tdnnf4.linear:1.22321 tdnnf4.affine:1.80214 tdnnf5.linear:1.01195 tdnnf5.affine:1.61096 tdnnf6.linear:1.20643 tdnnf6.affine:1.72087 tdnnf7.linear:1.19209 tdnnf7.affine:1.74062 tdnnf8.linear:1.16143 tdnnf8.affine:1.73672 tdnnf9.linear:1.11671 tdnnf9.affine:1.70279 tdnnf10.linear:1.07276 tdnnf10.affine:1.6888 tdnnf11.linear:1.04806 tdnnf11.affine:1.69874 tdnnf12.linear:1.02479 tdnnf12.affine:1.67372 tdnnf13.linear:1.00984 tdnnf13.affine:1.68824 prefinal-l:1.15906 prefinal-chain.affine:1.73936 prefinal-chain.linear:1.25785 output.affine:2.38041 prefinal-xent.affine:1.60156 prefinal-xent.linear:0.904009 output-xent.affine:2.99843 ]
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:19.6209 tdnnf2.linear:13.0991 tdnnf2.affine:18.7517 tdnnf3.linear:10.64 tdnnf3.affine:17.8752 tdnnf4.linear:9.50395 tdnnf4.affine:18.3337 tdnnf5.linear:8.06761 tdnnf5.affine:17.436 tdnnf6.linear:9.23134 tdnnf6.affine:17.6273 tdnnf7.linear:9.4728 tdnnf7.affine:18.243 tdnnf8.linear:9.73106 tdnnf8.affine:18.4899 tdnnf9.linear:9.99234 tdnnf9.affine:18.4042 tdnnf10.linear:10.2725 tdnnf10.affine:18.579 tdnnf11.linear:10.6072 tdnnf11.affine:18.9203 tdnnf12.linear:10.9424 tdnnf12.affine:18.7862 tdnnf13.linear:11.3835 tdnnf13.affine:18.7313 prefinal-l:15.6096 prefinal-chain.affine:18.8146 prefinal-chain.linear:14.7052 output.affine:25.4032 prefinal-xent.affine:18.2179 prefinal-xent.linear:12.6377 output-xent.affine:47.2371 ]
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.137287 tdnnf2.linear:0.110363 tdnnf2.affine:0.0985182 tdnnf3.linear:0.122324 tdnnf3.affine:0.0940422 tdnnf4.linear:0.12767 tdnnf4.affine:0.0917975 tdnnf5.linear:0.123559 tdnnf5.affine:0.085916 tdnnf6.linear:0.129854 tdnnf6.affine:0.0913578 tdnnf7.linear:0.125203 tdnnf7.affine:0.0892885 tdnnf8.linear:0.119032 tdnnf8.affine:0.0879952 tdnnf9.linear:0.111587 tdnnf9.affine:0.0867613 tdnnf10.linear:0.10431 tdnnf10.affine:0.0853123 tdnnf11.linear:0.0987358 tdnnf11.affine:0.0843242 tdnnf12.linear:0.0935796 tdnnf12.affine:0.0838001 tdnnf13.linear:0.0886192 tdnnf13.affine:0.084802 prefinal-l:0.0744154 prefinal-chain.affine:0.0868158 prefinal-chain.linear:0.0857699 output.affine:0.0962945 prefinal-xent.affine:0.0828126 prefinal-xent.linear:0.0721251 output-xent.affine:0.0644015 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Wed Jun 15 05:53:27 UTC 2022, elapsed time 1 seconds
