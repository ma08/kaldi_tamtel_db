# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/18.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/17.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/18.mdl 
# Started at Wed Jun 15 13:16:39 UTC 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/18.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 3800
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9533872
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=3800
output-node name=output input=output.affine dim=3800 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=3800
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=3800 output-dim=3800
output-node name=output-xent input=output-xent.log-softmax dim=3800 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00678, bias-{mean,stddev}=-0.001585,0.01579
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03516, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.22,0.23,0.24 0.24,0.26,0.48,0.60,0.74 0.87,1.0,1.0,1.6), mean=0.48, stddev=0.204], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.72,0.73,0.77 0.78,0.82,1.1,1.3,1.4 1.5,1.6,1.7,1.9), mean=1.1, stddev=0.252], bias-{mean,stddev}=0.003403,0.1193, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.95e+06, self-repaired-proportion=0.292635, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 5e-06,0.001,0.02,0.09,0.13 0.21,0.31,0.37,0.67), mean=0.0544, stddev=0.0773], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0007,0.07,0.34,0.92,0.98 1.0,1.0,1.0,1.0), mean=0.465, stddev=0.388], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.03,0.03,0.04,0.06,0.07 0.08,0.10,0.11,0.17), mean=0.0465, stddev=0.0194], oderiv-count=4.47143e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46882.4, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 9e-06,0.001,0.02,0.09,0.12 0.21,0.30,0.36,0.65), mean=0.0532, stddev=0.075], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.0004,0.006,0.04,0.06,0.07 0.07,0.08,0.09,0.14), mean=0.0346, stddev=0.0264]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02457, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.1,1.1 1.1,1.1,1.1,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.11, stddev=0.00134], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.18,0.19,0.20 0.21,0.22,0.27,0.31,0.35 0.37,0.41,0.44,0.54), mean=0.272, stddev=0.0559], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02381, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.24,0.24,0.27 0.29,0.31,0.36,0.43,0.47 0.50,0.56,0.60,0.77), mean=0.373, stddev=0.0758], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.81 0.83,0.85,0.85,0.90), mean=0.761, stddev=0.0385], bias-{mean,stddev}=-0.03983,0.2567, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.07,0.10,0.13 0.17,0.23,0.32,0.42,0.47 0.52,0.57,0.60,0.72), mean=0.323, stddev=0.116], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.18,0.21,0.26 0.32,0.37,0.49,0.61,0.69 0.75,0.82,0.83,0.90), mean=0.492, stddev=0.144], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.005,0.006,0.007,0.01), mean=0.00314, stddev=0.00105], oderiv-count=4.60392e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46370.4, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.08,0.10,0.13 0.17,0.22,0.32,0.41,0.46 0.51,0.56,0.59,0.71), mean=0.318, stddev=0.114], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.22,0.26,0.31 0.34,0.39,0.47,0.54,0.59 0.62,0.67,0.70,0.82), mean=0.468, stddev=0.0959]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02079, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.94,0.94,0.94 0.94,0.94,0.94,0.94,0.94 0.94,0.94,0.94,0.94), mean=0.941, stddev=0.00101], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.18,0.19 0.20,0.21,0.23,0.26,0.27 0.28,0.30,0.31,0.39), mean=0.234, stddev=0.0278], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02094, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.24,0.26,0.27 0.28,0.30,0.33,0.36,0.38 0.40,0.42,0.44,0.60), mean=0.332, stddev=0.0412], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.60,0.61,0.62 0.64,0.65,0.67,0.69,0.71 0.72,0.72,0.73,0.78), mean=0.669, stddev=0.0285], bias-{mean,stddev}=-0.02682,0.2458, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.11,0.14 0.18,0.23,0.33,0.44,0.50 0.55,0.59,0.62,0.80), mean=0.335, stddev=0.122], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.19,0.21,0.28 0.31,0.37,0.49,0.59,0.66 0.70,0.74,0.76,0.87), mean=0.485, stddev=0.13], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.003 0.004,0.004,0.005,0.009), mean=0.00232, stddev=0.000702], oderiv-count=4.53554e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45858.4, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.11,0.14 0.18,0.22,0.33,0.43,0.49 0.54,0.59,0.61,0.79), mean=0.331, stddev=0.12], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.26,0.28,0.34 0.38,0.42,0.50,0.56,0.60 0.63,0.66,0.69,0.75), mean=0.493, stddev=0.0874]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01861, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.842, stddev=0.000946], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.17,0.18 0.18,0.19,0.21,0.22,0.23 0.24,0.26,0.27,0.33), mean=0.209, stddev=0.0209], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02008, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.28 0.29,0.30,0.32,0.34,0.36 0.37,0.38,0.40,0.46), mean=0.32, stddev=0.0286], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.57,0.58,0.60 0.60,0.62,0.64,0.66,0.68 0.69,0.70,0.72,0.73), mean=0.642, stddev=0.0293], bias-{mean,stddev}=-0.01596,0.2622, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.83e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.10,0.14 0.18,0.22,0.33,0.45,0.52 0.59,0.65,0.70,1.0), mean=0.341, stddev=0.136], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.16,0.20,0.25 0.30,0.37,0.48,0.59,0.66 0.70,0.74,0.76,0.86), mean=0.478, stddev=0.136], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.007,0.007,0.01), mean=0.00383, stddev=0.00104], oderiv-count=1.48065e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15286.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.10,0.14 0.17,0.22,0.32,0.44,0.52 0.58,0.64,0.69,1.0), mean=0.335, stddev=0.134], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.27,0.30,0.35 0.39,0.43,0.51,0.57,0.61 0.66,0.69,0.72,0.77), mean=0.505, stddev=0.0917]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02142, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.68,0.68,0.68 0.68,0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69), mean=0.686, stddev=0.000646], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.21 0.22,0.23,0.24,0.26,0.26 0.27,0.28,0.29,0.30), mean=0.242, stddev=0.0185], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.02542, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.22,0.23,0.24 0.25,0.26,0.29,0.31,0.32 0.33,0.34,0.35,0.42), mean=0.286, stddev=0.0289], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.75,0.75,0.77 0.78,0.79,0.81,0.84,0.85 0.86,0.86,0.87,0.89), mean=0.813, stddev=0.0286], bias-{mean,stddev}=-0.01892,0.2498, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.07e+06, self-repaired-proportion=0.00024248, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.05,0.08 0.11,0.15,0.24,0.36,0.44 0.51,0.58,0.62,0.81), mean=0.261, stddev=0.131], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.13,0.20 0.25,0.31,0.45,0.61,0.68 0.74,0.80,0.84,0.90), mean=0.462, stddev=0.166], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.006,0.007 0.009,0.01,0.01,0.03), mean=0.0053, stddev=0.00204], oderiv-count=1.54792e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15286.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.05,0.08 0.11,0.14,0.23,0.36,0.43 0.50,0.57,0.61,0.80), mean=0.254, stddev=0.129], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.15,0.18,0.23 0.27,0.30,0.38,0.45,0.48 0.51,0.54,0.56,0.64), mean=0.375, stddev=0.0861]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0181, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.819, stddev=0.000846], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.17 0.18,0.19,0.20,0.22,0.23 0.23,0.24,0.25,0.30), mean=0.204, stddev=0.0187], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0205, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.27,0.28,0.29 0.30,0.31,0.33,0.35,0.36 0.37,0.38,0.38,0.43), mean=0.327, stddev=0.0239], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.59,0.60 0.61,0.63,0.65,0.68,0.70 0.71,0.72,0.75,0.76), mean=0.655, stddev=0.0337], bias-{mean,stddev}=-0.03237,0.2404, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.61e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.11,0.15 0.19,0.23,0.33,0.44,0.51 0.56,0.62,0.65,0.92), mean=0.34, stddev=0.128], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.19,0.22,0.26 0.31,0.37,0.48,0.58,0.64 0.67,0.69,0.73,0.84), mean=0.476, stddev=0.125], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.005,0.005 0.006,0.007,0.008,0.01), mean=0.00386, stddev=0.00112], oderiv-count=1.48212e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14774.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.11,0.14 0.18,0.22,0.32,0.43,0.50 0.55,0.61,0.64,0.90), mean=0.333, stddev=0.126], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.27,0.31,0.36 0.39,0.44,0.52,0.58,0.61 0.64,0.67,0.70,0.79), mean=0.509, stddev=0.0876]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01877, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85), mean=0.85, stddev=0.00081], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.19,0.19,0.21,0.23,0.24 0.24,0.25,0.26,0.29), mean=0.212, stddev=0.0193], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02075, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.28,0.28,0.29 0.30,0.31,0.33,0.35,0.36 0.37,0.38,0.39,0.41), mean=0.331, stddev=0.024], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.59,0.60,0.61 0.62,0.64,0.66,0.69,0.71 0.72,0.73,0.74,0.79), mean=0.663, stddev=0.0337], bias-{mean,stddev}=-0.02303,0.2578, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.24e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.11,0.15 0.18,0.23,0.33,0.45,0.53 0.59,0.67,0.71,0.90), mean=0.346, stddev=0.137], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.19,0.23,0.27 0.30,0.37,0.48,0.59,0.65 0.69,0.74,0.77,0.83), mean=0.48, stddev=0.13], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.005 0.006,0.007,0.008,0.01), mean=0.00384, stddev=0.00114], oderiv-count=1.37877e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14262.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.11,0.14 0.17,0.22,0.33,0.45,0.52 0.58,0.66,0.70,0.89), mean=0.339, stddev=0.135], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.29,0.32,0.36 0.39,0.43,0.51,0.58,0.62 0.65,0.68,0.70,0.78), mean=0.51, stddev=0.0896]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01931, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.87,0.87,0.87,0.87 0.87,0.87,0.87,0.87,0.87 0.87,0.87,0.87,0.88), mean=0.874, stddev=0.000691], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.18 0.19,0.20,0.22,0.23,0.24 0.25,0.27,0.28,0.33), mean=0.217, stddev=0.0223], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0211, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.29,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.39,0.40,0.45), mean=0.337, stddev=0.0239], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.60,0.61,0.62 0.63,0.64,0.67,0.70,0.72 0.73,0.74,0.75,0.75), mean=0.674, stddev=0.0335], bias-{mean,stddev}=-0.03387,0.2629, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.99e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.10,0.15 0.19,0.23,0.34,0.46,0.54 0.59,0.70,0.73,0.90), mean=0.353, stddev=0.138], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.17,0.21,0.26 0.30,0.36,0.48,0.58,0.64 0.68,0.74,0.76,0.80), mean=0.475, stddev=0.129], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.003,0.004,0.005 0.006,0.007,0.008,0.02), mean=0.00368, stddev=0.00126], oderiv-count=1.33646e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13750.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.08,0.10,0.15 0.18,0.23,0.34,0.46,0.53 0.58,0.68,0.71,0.88), mean=0.346, stddev=0.136], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.27,0.30,0.36 0.40,0.45,0.53,0.59,0.63 0.67,0.70,0.72,0.78), mean=0.52, stddev=0.093]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01985, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.90,0.90,0.90,0.90 0.90,0.90,0.90,0.90,0.90 0.90,0.90,0.90,0.90), mean=0.898, stddev=0.000598], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.18,0.19 0.20,0.20,0.22,0.24,0.25 0.26,0.28,0.30,0.37), mean=0.223, stddev=0.0237], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02148, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.30,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.40,0.41,0.43), mean=0.343, stddev=0.0241], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.61,0.62,0.63 0.64,0.65,0.69,0.72,0.73 0.74,0.76,0.80,0.81), mean=0.686, stddev=0.0368], bias-{mean,stddev}=-0.02773,0.2554, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.3e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.12,0.16 0.19,0.26,0.36,0.47,0.54 0.61,0.66,0.70,0.90), mean=0.366, stddev=0.132], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.20,0.22,0.26 0.31,0.36,0.48,0.58,0.63 0.66,0.71,0.73,0.85), mean=0.473, stddev=0.122], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.005,0.006,0.007,0.01), mean=0.00334, stddev=0.00101], oderiv-count=1.31612e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13238.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.12,0.16 0.19,0.25,0.36,0.47,0.53 0.60,0.65,0.69,0.89), mean=0.361, stddev=0.13], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.30,0.34,0.38 0.42,0.48,0.55,0.62,0.66 0.69,0.72,0.75,0.83), mean=0.548, stddev=0.0923]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02042, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.92,0.92,0.92 0.92,0.92,0.92,0.92,0.92 0.93,0.93,0.93,0.93), mean=0.924, stddev=0.000732], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.20 0.20,0.21,0.23,0.25,0.26 0.27,0.29,0.30,0.37), mean=0.23, stddev=0.0244], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02202, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.29,0.29,0.31 0.32,0.33,0.35,0.37,0.38 0.39,0.41,0.41,0.43), mean=0.351, stddev=0.0254], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.62,0.63,0.64 0.65,0.67,0.70,0.73,0.75 0.77,0.80,0.81,0.83), mean=0.703, stddev=0.0397], bias-{mean,stddev}=-0.003791,0.2547, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.45e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.17,0.20 0.24,0.28,0.40,0.52,0.57 0.65,0.72,0.75,0.90), mean=0.402, stddev=0.135], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.24,0.26,0.30 0.33,0.38,0.48,0.58,0.63 0.67,0.71,0.74,0.83), mean=0.483, stddev=0.115], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.01), mean=0.00298, stddev=0.000762], oderiv-count=1.2387e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12726.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.17,0.20 0.24,0.28,0.39,0.51,0.57 0.64,0.71,0.74,0.89), mean=0.397, stddev=0.133], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.38,0.40,0.44 0.48,0.52,0.59,0.67,0.71 0.74,0.79,0.83,1.0), mean=0.594, stddev=0.0945]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.021, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.95,0.95,0.95 0.95,0.95,0.95,0.95,0.95 0.95,0.95,0.95,0.95), mean=0.951, stddev=0.000598], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.19,0.20 0.21,0.22,0.23,0.26,0.27 0.28,0.29,0.31,0.35), mean=0.236, stddev=0.0248], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02248, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.29,0.30,0.31 0.32,0.34,0.36,0.38,0.39 0.40,0.41,0.42,0.46), mean=0.359, stddev=0.0277], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.63,0.65,0.66 0.67,0.68,0.71,0.75,0.78 0.80,0.81,0.82,0.84), mean=0.718, stddev=0.0412], bias-{mean,stddev}=-0.02966,0.2598, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.12e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.13,0.17,0.20 0.23,0.29,0.41,0.53,0.59 0.65,0.70,0.74,0.89), mean=0.412, stddev=0.14], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.22,0.26,0.29 0.32,0.36,0.47,0.57,0.62 0.65,0.69,0.71,0.78), mean=0.467, stddev=0.112], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.005,0.005,0.009), mean=0.0028, stddev=0.000684], oderiv-count=1.22678e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12214.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.13,0.17,0.20 0.23,0.28,0.40,0.53,0.58 0.64,0.69,0.73,0.88), mean=0.407, stddev=0.137], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.37,0.41,0.45 0.49,0.54,0.63,0.71,0.75 0.79,0.83,0.87,1.0), mean=0.626, stddev=0.104]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02169, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.98,0.98,0.98 0.98,0.98,0.98,0.98,0.98 0.98,0.98,0.98,0.98), mean=0.981, stddev=0.000345], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.20,0.21 0.21,0.22,0.24,0.26,0.28 0.29,0.31,0.32,0.37), mean=0.244, stddev=0.0266], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02301, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.28,0.29,0.30 0.33,0.35,0.37,0.39,0.40 0.41,0.43,0.44,0.57), mean=0.367, stddev=0.0321], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.64,0.66,0.67 0.68,0.70,0.74,0.77,0.78 0.80,0.81,0.83,0.85), mean=0.735, stddev=0.039], bias-{mean,stddev}=-0.02062,0.251, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.89e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.17,0.19,0.23 0.27,0.33,0.43,0.55,0.63 0.68,0.75,0.79,0.92), mean=0.443, stddev=0.136], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.25,0.27,0.30 0.33,0.38,0.47,0.56,0.60 0.64,0.67,0.70,0.85), mean=0.468, stddev=0.102], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.003 0.003,0.004,0.004,0.007), mean=0.00262, stddev=0.000525], oderiv-count=1.18566e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11702.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.17,0.19,0.22 0.27,0.32,0.43,0.55,0.62 0.67,0.74,0.78,0.91), mean=0.437, stddev=0.134], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.43,0.46,0.49 0.54,0.59,0.67,0.76,0.81 0.84,0.89,0.91,1.1), mean=0.674, stddev=0.106]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02252, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.0,1.0,1.0 1.0,1.0,1.0,1.0,1.0 1.0,1.0,1.0,1.0), mean=1.02, stddev=0.000488], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.20,0.21,0.21 0.22,0.23,0.25,0.27,0.29 0.31,0.33,0.35,0.43), mean=0.253, stddev=0.0297], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02331, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.28,0.29,0.31 0.33,0.35,0.38,0.40,0.41 0.42,0.43,0.44,0.46), mean=0.372, stddev=0.0315], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.65,0.66,0.68 0.70,0.71,0.74,0.78,0.80 0.82,0.83,0.84,0.87), mean=0.745, stddev=0.0422], bias-{mean,stddev}=-0.01889,0.2485, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.97e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.20,0.22,0.26 0.30,0.35,0.47,0.59,0.66 0.71,0.76,0.80,0.95), mean=0.476, stddev=0.137], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.26,0.27,0.31 0.35,0.39,0.47,0.55,0.59 0.62,0.66,0.68,0.74), mean=0.471, stddev=0.0933], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.004,0.004), mean=0.00249, stddev=0.000421], oderiv-count=1.15135e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11190.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.20,0.22,0.26 0.30,0.35,0.47,0.59,0.65 0.70,0.75,0.79,0.93), mean=0.471, stddev=0.135], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.48,0.51,0.54 0.58,0.64,0.73,0.81,0.85 0.90,0.94,0.97,1.1), mean=0.725, stddev=0.106]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.327161, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, params-rms=0.03072, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.98,0.98,0.98 0.98,0.98,0.98,0.98,0.98 0.98,0.98,0.98,0.98), mean=0.983, stddev=0.000345], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.44,0.44,0.45 0.46,0.47,0.49,0.51,0.52 0.53,0.54,0.55,0.60), mean=0.491, stddev=0.0248], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02323, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.27,0.28,0.30 0.31,0.33,0.37,0.41,0.43 0.44,0.46,0.47,0.50), mean=0.369, stddev=0.0462], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.67,0.68,0.69 0.70,0.72,0.74,0.76,0.79 0.80,0.83,0.83,0.84), mean=0.742, stddev=0.033], bias-{mean,stddev}=-0.02253,0.2543, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.91e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.20,0.24,0.28 0.33,0.40,0.52,0.65,0.71 0.78,0.86,0.90,0.98), mean=0.525, stddev=0.15], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.26,0.27,0.31 0.35,0.39,0.45,0.52,0.55 0.59,0.63,0.66,0.70), mean=0.452, stddev=0.083], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.003,0.004,0.004 0.005,0.005,0.006,0.007), mean=0.00341, stddev=0.000759], oderiv-count=1.11651e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11190.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.20,0.24,0.28 0.33,0.39,0.51,0.64,0.70 0.77,0.85,0.89,0.96), mean=0.518, stddev=0.147], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.53,0.56,0.62 0.68,0.74,0.86,0.97,1.0 1.1,1.1,1.1,1.7), mean=0.853, stddev=0.135]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, params-rms=0.03086, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,0.99,0.99,0.99 0.99,0.99,0.99,0.99,0.99 0.99,0.99,0.99,0.99), mean=0.987, stddev=0.000546], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.39,0.40,0.42 0.44,0.45,0.49,0.53,0.55 0.56,0.58,0.59,0.62), mean=0.492, stddev=0.0431], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11190.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4e-08,-3e-08,-3e-08,-2e-08 -2e-08,-1e-08,-2e-10,1e-08,2e-08 2e-08,2e-08,3e-08,5e-08), mean=-2.68e-10, stddev=1.31e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.3,1.3,1.4,1.5,1.6 1.6,1.6,1.7,1.7), mean=1.42, stddev=0.112]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3800, learning-rate=0.000531007, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.02825, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-10,5e-10,5e-10,6e-10 0.05,0.13,0.44,0.61,0.65 0.68,0.70,0.72,0.88), mean=0.394, stddev=0.222], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.4,1.5 1.5,1.6,1.7,1.9,1.9 2.0,2.0,2.1,2.2), mean=1.73, stddev=0.157], bias-{mean,stddev}=0.001885,0.1239, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.023, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.25,0.27,0.30 0.32,0.34,0.37,0.40,0.41 0.42,0.43,0.44,0.50), mean=0.366, stddev=0.04], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.66,0.67,0.68 0.69,0.70,0.73,0.76,0.78 0.80,0.81,0.82,0.85), mean=0.735, stddev=0.0351], bias-{mean,stddev}=-0.02918,0.2506, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.34e+05, self-repaired-proportion=0.00585938, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.15,0.19,0.25 0.30,0.37,0.49,0.62,0.69 0.73,0.79,0.83,0.95), mean=0.495, stddev=0.151], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.23,0.26,0.31 0.35,0.40,0.48,0.55,0.59 0.62,0.65,0.67,0.74), mean=0.472, stddev=0.0992], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.002,0.003,0.003 0.003,0.004,0.005,0.03), mean=0.0025, stddev=0.0021], oderiv-count=1.05576e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11190.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.15,0.19,0.24 0.30,0.36,0.48,0.61,0.68 0.72,0.78,0.81,0.93), mean=0.486, stddev=0.149], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.42,0.46,0.53 0.58,0.64,0.75,0.83,0.86 0.89,0.92,0.94,1.3), mean=0.734, stddev=0.123]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000531007, l2-regularize=0.008, max-change=0.75, params-rms=0.02721, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.87,0.87,0.87,0.87 0.87,0.87,0.87,0.87,0.87 0.87,0.87,0.87,0.87), mean=0.871, stddev=0.000345], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.36,0.37,0.38 0.39,0.41,0.43,0.46,0.48 0.49,0.51,0.52,0.59), mean=0.434, stddev=0.0327], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11190.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3e-08,-2e-08,-2e-08,-2e-08 -2e-08,-1e-08,-2e-09,9e-09,1e-08 2e-08,2e-08,2e-08,3e-08), mean=-1.65e-09, stddev=1.15e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.79,0.80,0.80 0.82,0.83,0.86,0.90,0.93 0.95,0.96,0.98,1.1), mean=0.866, stddev=0.0442]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3800, learning-rate=0.00265504, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.05399, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.03 0.04,0.07,0.88,1.2,1.3 1.4,1.4,1.4,1.8), mean=0.713, stddev=0.487], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.0,3.1,3.1,3.2 3.2,3.2,3.3,3.4,3.5 3.5,3.5,3.5,3.6), mean=3.33, stddev=0.106], bias-{mean,stddev}=6.902e-10,0.1217, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=3800, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 3e-05,8e-05,0.0006,0.002,0.002 0.003,0.004,0.004,0.04), mean=0.000892, stddev=0.0012], oderiv-count=1.07317e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/17.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/18.mdl 
LOG (nnet3-show-progress[5.5.1009~1-e4940]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:1.21114 tdnnf2.linear:0.723501 tdnnf2.affine:0.788499 tdnnf3.linear:0.660503 tdnnf3.affine:0.691646 tdnnf4.linear:0.607259 tdnnf4.affine:0.662719 tdnnf5.linear:0.4741 tdnnf5.affine:0.547994 tdnnf6.linear:0.60241 tdnnf6.affine:0.668297 tdnnf7.linear:0.603965 tdnnf7.affine:0.663428 tdnnf8.linear:0.593412 tdnnf8.affine:0.65844 tdnnf9.linear:0.576296 tdnnf9.affine:0.642278 tdnnf10.linear:0.554422 tdnnf10.affine:0.631845 tdnnf11.linear:0.540582 tdnnf11.affine:0.631743 tdnnf12.linear:0.528203 tdnnf12.affine:0.627621 tdnnf13.linear:0.52441 tdnnf13.affine:0.647544 prefinal-l:0.575476 prefinal-chain.affine:0.694166 prefinal-chain.linear:0.593838 output.affine:0.985315 prefinal-xent.affine:0.576367 prefinal-xent.linear:0.470342 output-xent.affine:1.36052 ]
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:17.1215 tdnnf2.linear:12.5814 tdnnf2.affine:14.7548 tdnnf3.linear:10.6427 tdnnf3.affine:13.3238 tdnnf4.linear:9.52669 tdnnf4.affine:13.2784 tdnnf5.linear:7.75616 tdnnf5.affine:12.2055 tdnnf6.linear:9.26964 tdnnf6.affine:13.052 tdnnf7.linear:9.61163 tdnnf7.affine:13.4691 tdnnf8.linear:9.88529 tdnnf8.affine:13.7357 tdnnf9.linear:10.1616 tdnnf9.affine:13.7319 tdnnf10.linear:10.4553 tdnnf10.affine:13.9111 tdnnf11.linear:10.7539 tdnnf11.affine:14.2276 tdnnf12.linear:11.103 tdnnf12.affine:14.2727 tdnnf13.linear:11.5294 tdnnf13.affine:14.3522 prefinal-l:15.7281 prefinal-chain.affine:14.4274 prefinal-chain.linear:15.7984 output.affine:28.8904 prefinal-xent.affine:14.2772 prefinal-xent.linear:13.9305 output-xent.affine:53.7736 ]
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0700552 tdnnf2.linear:0.0570032 tdnnf2.affine:0.0525473 tdnnf3.linear:0.0615956 tdnnf3.affine:0.0509444 tdnnf4.linear:0.0633121 tdnnf4.affine:0.0489116 tdnnf5.linear:0.0606276 tdnnf5.affine:0.0439225 tdnnf6.linear:0.0645622 tdnnf6.affine:0.0502455 tdnnf7.linear:0.0624511 tdnnf7.affine:0.0483246 tdnnf8.linear:0.0596957 tdnnf8.affine:0.0470501 tdnnf9.linear:0.0564088 tdnnf9.affine:0.0459252 tdnnf10.linear:0.0527568 tdnnf10.affine:0.044608 tdnnf11.linear:0.0500056 tdnnf11.affine:0.0436165 tdnnf12.linear:0.0473471 tdnnf12.affine:0.0432244 tdnnf13.linear:0.045273 tdnnf13.affine:0.0443818 prefinal-l:0.0364518 prefinal-chain.affine:0.0473917 prefinal-chain.linear:0.037513 output.affine:0.0342152 prefinal-xent.affine:0.0398229 prefinal-xent.linear:0.0337422 output-xent.affine:0.0254337 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Wed Jun 15 13:16:40 UTC 2022, elapsed time 1 seconds
