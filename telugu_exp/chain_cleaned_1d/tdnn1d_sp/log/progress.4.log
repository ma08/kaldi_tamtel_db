# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/4.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/4.mdl 
# Started at Wed Jun 15 03:14:20 UTC 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/4.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 3800
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9533872
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=3800
output-node name=output input=output.affine dim=3800 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=3800
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=3800 output-dim=3800
output-node name=output-xent input=output-xent.log-softmax dim=3800 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00678, bias-{mean,stddev}=-0.001585,0.01579
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04304, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.53,0.54,0.56 0.57,0.59,0.62,0.67,0.70 0.76,0.84,0.87,1.2), mean=0.635, stddev=0.0664], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.3,1.3,1.3 1.3,1.3,1.3,1.4,1.5 1.6,1.7,1.7,1.9), mean=1.37, stddev=0.107], bias-{mean,stddev}=-0.009268,0.5514, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.99e+06, self-repaired-proportion=0.785119, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.49,0.76 0.99,1.2,1.4,2.2), mean=0.233, stddev=0.348], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.46,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.486, stddev=0.463], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.03 0.03,0.04,0.06,0.07,0.08 0.09,0.10,0.12,0.17), mean=0.0564, stddev=0.0197], oderiv-count=4.6677e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47142.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.45,0.70 0.93,1.2,1.3,2.0), mean=0.217, stddev=0.325], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.06,0.09,0.11 0.12,0.13,0.13,0.16), mean=0.0487, stddev=0.0452]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02351, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.1,1.1 1.1,1.1,1.1,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.06, stddev=0.00261], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.20,0.20,0.21 0.22,0.23,0.26,0.29,0.31 0.33,0.35,0.37,0.50), mean=0.263, stddev=0.0389], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.03892, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.53,0.54,0.56 0.58,0.59,0.62,0.65,0.67 0.68,0.71,0.72,0.91), mean=0.621, stddev=0.0394], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.24, stddev=0.0304], bias-{mean,stddev}=-0.004132,0.5762, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.96e+06, self-repaired-proportion=0.0104886, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.04,0.05,0.09 0.12,0.18,0.39,0.70,0.90 1.1,1.3,1.4,2.2), mean=0.457, stddev=0.313], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.07,0.10,0.15 0.20,0.27,0.50,0.72,0.81 0.88,0.91,0.93,0.99), mean=0.498, stddev=0.227], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.005,0.006 0.008,0.01,0.01,0.04), mean=0.00399, stddev=0.00241], oderiv-count=4.52658e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46630.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.06,0.10 0.13,0.18,0.38,0.68,0.86 1.0,1.2,1.3,2.0), mean=0.446, stddev=0.293], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.19,0.25,0.30 0.37,0.43,0.57,0.70,0.77 0.83,0.90,0.94,1.1), mean=0.569, stddev=0.16]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02009, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.90,0.90,0.91,0.91 0.91,0.91,0.91,0.91,0.91 0.91,0.91,0.91,0.91), mean=0.909, stddev=0.00174], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.20 0.20,0.21,0.23,0.24,0.25 0.26,0.28,0.29,0.34), mean=0.226, stddev=0.0213], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.03828, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.54,0.55,0.56 0.57,0.59,0.61,0.64,0.65 0.66,0.68,0.69,0.71), mean=0.612, stddev=0.031], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.3 1.3,1.3,1.3,1.3), mean=1.22, stddev=0.0291], bias-{mean,stddev}=-0.007032,0.5826, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.01e+06, self-repaired-proportion=0.0035846, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.07,0.09,0.13 0.17,0.25,0.46,0.76,0.97 1.1,1.3,1.4,2.0), mean=0.521, stddev=0.311], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.09,0.12,0.17 0.22,0.30,0.49,0.68,0.77 0.82,0.88,0.90,0.97), mean=0.494, stddev=0.201], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.003,0.004 0.004,0.005,0.007,0.02), mean=0.00259, stddev=0.00115], oderiv-count=4.58189e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46118.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.07,0.09,0.13 0.18,0.24,0.44,0.72,0.92 1.1,1.2,1.3,1.8), mean=0.501, stddev=0.293], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.30,0.34,0.41 0.46,0.53,0.68,0.83,0.90 0.95,1.0,1.1,1.2), mean=0.68, stddev=0.169]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01873, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.85 0.85,0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85), mean=0.848, stddev=0.00144], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.24,0.25,0.26,0.31), mean=0.211, stddev=0.0172], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.03808, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.54,0.54,0.56 0.57,0.58,0.61,0.63,0.65 0.66,0.67,0.67,0.72), mean=0.609, stddev=0.0297], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.3 1.3,1.3,1.3,1.3), mean=1.22, stddev=0.0279], bias-{mean,stddev}=0.006205,0.6342, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.85e+05, self-repaired-proportion=0.00324083, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.08,0.10,0.14 0.21,0.29,0.51,0.83,1.0 1.3,1.4,1.6,2.5), mean=0.579, stddev=0.345], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.09,0.12,0.17 0.23,0.31,0.49,0.68,0.76 0.83,0.87,0.88,0.96), mean=0.495, stddev=0.198], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.006 0.006,0.007,0.008,0.02), mean=0.00387, stddev=0.00139], oderiv-count=1.50258e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15373, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.08,0.10,0.15 0.20,0.28,0.49,0.78,0.99 1.2,1.4,1.5,2.3), mean=0.554, stddev=0.324], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.35,0.38,0.45 0.53,0.60,0.76,0.91,0.99 1.0,1.1,1.2,1.4), mean=0.756, stddev=0.183]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.0238, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.76,0.76,0.76 0.76,0.76,0.76,0.76,0.76 0.76,0.76,0.76,0.76), mean=0.762, stddev=0.0012], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.23,0.23,0.24 0.25,0.25,0.27,0.28,0.29 0.30,0.30,0.31,0.34), mean=0.269, stddev=0.0178], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.05333, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.51,0.52,0.54 0.55,0.57,0.60,0.64,0.66 0.67,0.69,0.70,0.72), mean=0.602, stddev=0.0412], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7,1.8 1.8,1.8,1.8,1.8), mean=1.71, stddev=0.0363], bias-{mean,stddev}=-0.001579,0.6042, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.02e+06, self-repaired-proportion=0.0095818, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.05,0.07,0.12 0.16,0.22,0.43,0.77,0.97 1.2,1.4,1.5,2.1), mean=0.512, stddev=0.338], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.08,0.09,0.16 0.22,0.29,0.47,0.69,0.77 0.84,0.90,0.94,0.99), mean=0.488, stddev=0.211], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.006 0.008,0.01,0.01,0.04), mean=0.00435, stddev=0.00235], oderiv-count=1.49998e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15373, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.05,0.07,0.11 0.16,0.21,0.41,0.73,0.91 1.1,1.4,1.4,1.9), mean=0.486, stddev=0.318], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.23,0.28,0.36 0.41,0.48,0.65,0.81,0.89 0.95,1.0,1.1,1.2), mean=0.649, stddev=0.187]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01812, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.82, stddev=0.00122], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.19,0.19,0.20,0.22,0.22 0.23,0.24,0.24,0.26), mean=0.204, stddev=0.0149], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03813, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.54,0.55,0.56 0.57,0.59,0.61,0.63,0.65 0.65,0.67,0.67,0.69), mean=0.609, stddev=0.0279], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.3 1.3,1.3,1.3,1.3), mean=1.22, stddev=0.0276], bias-{mean,stddev}=-0.01972,0.5749, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.27e+05, self-repaired-proportion=0.00344082, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.11,0.18 0.24,0.31,0.53,0.82,1.0 1.2,1.3,1.4,2.2), mean=0.582, stddev=0.312], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.11,0.14,0.19 0.25,0.32,0.48,0.64,0.72 0.77,0.82,0.86,0.95), mean=0.484, stddev=0.178], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.007,0.008,0.01), mean=0.00339, stddev=0.00126], oderiv-count=1.45363e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14861, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.11,0.17 0.23,0.30,0.51,0.78,0.96 1.1,1.2,1.4,2.1), mean=0.555, stddev=0.294], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.36,0.40,0.48 0.56,0.64,0.80,0.95,1.0 1.1,1.2,1.2,1.3), mean=0.792, stddev=0.181]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01834, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.83, stddev=0.00117], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.18 0.19,0.19,0.21,0.22,0.23 0.23,0.24,0.24,0.28), mean=0.207, stddev=0.0151], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03825, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.55,0.56,0.56 0.58,0.59,0.61,0.64,0.65 0.66,0.67,0.68,0.71), mean=0.611, stddev=0.0284], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.3 1.3,1.3,1.3,1.3), mean=1.22, stddev=0.029], bias-{mean,stddev}=0.007867,0.6143, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.75e+05, self-repaired-proportion=0.000976562, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.13,0.18 0.23,0.31,0.53,0.87,1.1 1.3,1.5,1.6,2.2), mean=0.606, stddev=0.343], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.15,0.19 0.24,0.32,0.49,0.66,0.74 0.79,0.86,0.88,0.96), mean=0.492, stddev=0.186], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.005,0.007,0.008,0.01), mean=0.00334, stddev=0.0012], oderiv-count=1.37227e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14349, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.11,0.13,0.17 0.22,0.30,0.51,0.82,1.0 1.2,1.4,1.6,2.0), mean=0.577, stddev=0.323], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.41,0.44,0.50 0.55,0.63,0.80,0.96,1.0 1.1,1.2,1.3,1.5), mean=0.804, stddev=0.192]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01852, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.838, stddev=0.00115], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.18,0.18 0.19,0.20,0.21,0.22,0.23 0.24,0.24,0.25,0.29), mean=0.209, stddev=0.0167], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03826, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.55,0.56,0.57 0.58,0.59,0.61,0.63,0.65 0.66,0.67,0.68,0.72), mean=0.612, stddev=0.0282], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.3 1.3,1.3,1.3,1.3), mean=1.22, stddev=0.0277], bias-{mean,stddev}=-0.01813,0.6246, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.10,0.11,0.16 0.22,0.32,0.54,0.85,1.1 1.2,1.5,1.7,2.1), mean=0.601, stddev=0.34], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.13,0.18 0.24,0.32,0.49,0.65,0.73 0.80,0.85,0.86,0.91), mean=0.486, stddev=0.185], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.007,0.008,0.02), mean=0.00341, stddev=0.00137], oderiv-count=1.37405e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13837, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.11,0.15 0.21,0.30,0.52,0.81,1.0 1.2,1.5,1.6,2.0), mean=0.573, stddev=0.321], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.38,0.40,0.47 0.54,0.63,0.80,0.96,1.0 1.1,1.2,1.2,1.4), mean=0.798, stddev=0.195]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01882, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85), mean=0.852, stddev=0.00088], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.24,0.25,0.26,0.32), mean=0.212, stddev=0.0176], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03842, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.55,0.56,0.57 0.58,0.59,0.61,0.64,0.65 0.66,0.67,0.68,0.69), mean=0.614, stddev=0.0278], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.23, stddev=0.0294], bias-{mean,stddev}=-0.008709,0.6101, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.46e+05, self-repaired-proportion=0.000267119, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.10,0.12,0.17 0.23,0.32,0.56,0.86,1.1 1.2,1.4,1.5,2.2), mean=0.606, stddev=0.327], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.14,0.18 0.24,0.32,0.49,0.65,0.73 0.77,0.83,0.87,0.93), mean=0.489, stddev=0.182], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.007,0.008,0.01), mean=0.0033, stddev=0.00125], oderiv-count=1.27861e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13325, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.10,0.12,0.17 0.22,0.31,0.54,0.81,0.99 1.1,1.3,1.4,2.1), mean=0.578, stddev=0.308], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.38,0.43,0.49 0.55,0.65,0.82,0.97,1.0 1.1,1.2,1.2,1.4), mean=0.808, stddev=0.189]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01908, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.86,0.86,0.86 0.86,0.86,0.86,0.86,0.86 0.87,0.87,0.87,0.87), mean=0.863, stddev=0.00104], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.18,0.18,0.19 0.19,0.20,0.21,0.23,0.24 0.25,0.26,0.26,0.31), mean=0.215, stddev=0.0176], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03853, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.55,0.56,0.57 0.58,0.59,0.62,0.64,0.65 0.66,0.67,0.68,0.71), mean=0.616, stddev=0.0277], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.23, stddev=0.0306], bias-{mean,stddev}=0.03974,0.6127, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.18e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.14,0.17,0.21 0.26,0.34,0.57,0.92,1.1 1.3,1.5,1.6,2.1), mean=0.637, stddev=0.337], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.18,0.22 0.27,0.33,0.50,0.68,0.75 0.80,0.84,0.89,0.94), mean=0.504, stddev=0.18], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.005,0.006,0.006,0.008), mean=0.00314, stddev=0.00097], oderiv-count=1.23245e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12813, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.14,0.16,0.21 0.26,0.33,0.54,0.88,1.0 1.2,1.4,1.5,1.9), mean=0.609, stddev=0.318], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.45,0.48,0.54 0.60,0.67,0.82,0.98,1.1 1.1,1.2,1.3,1.5), mean=0.829, stddev=0.182]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01951, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.89), mean=0.883, stddev=0.00101], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.22,0.23,0.24 0.25,0.26,0.26,0.29), mean=0.22, stddev=0.0176], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03861, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.55,0.56,0.57 0.58,0.59,0.62,0.64,0.65 0.66,0.67,0.68,0.73), mean=0.617, stddev=0.029], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.24, stddev=0.0307], bias-{mean,stddev}=-0.03247,0.6277, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.36e+05, self-repaired-proportion=0.000130336, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.11,0.15,0.20 0.24,0.32,0.57,0.88,1.1 1.2,1.4,1.5,2.0), mean=0.616, stddev=0.328], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.15,0.20 0.25,0.31,0.48,0.65,0.73 0.78,0.83,0.86,0.94), mean=0.483, stddev=0.18], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.005,0.006,0.007,0.02), mean=0.00311, stddev=0.00108], oderiv-count=1.20094e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12301, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.15,0.20 0.24,0.31,0.55,0.84,1.0 1.2,1.3,1.4,1.9), mean=0.59, stddev=0.309], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.42,0.46,0.53 0.59,0.68,0.84,0.99,1.1 1.1,1.2,1.3,1.4), mean=0.833, stddev=0.186]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01995, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.90,0.90,0.90,0.90 0.90,0.90,0.90,0.90,0.90 0.90,0.90,0.90,0.90), mean=0.903, stddev=0.000913], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.19,0.19,0.20 0.20,0.21,0.22,0.24,0.25 0.26,0.27,0.28,0.33), mean=0.225, stddev=0.0187], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03866, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.55,0.56,0.57 0.58,0.59,0.62,0.64,0.65 0.66,0.67,0.68,0.71), mean=0.618, stddev=0.0277], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.24, stddev=0.0304], bias-{mean,stddev}=-0.01651,0.6102, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.47e+05, self-repaired-proportion=0.000976562, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.13,0.17,0.22 0.27,0.36,0.57,0.88,1.1 1.3,1.5,1.6,2.0), mean=0.638, stddev=0.328], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.14,0.17,0.22 0.26,0.33,0.48,0.63,0.71 0.77,0.82,0.86,0.96), mean=0.485, stddev=0.169], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.004,0.005,0.006,0.01), mean=0.00292, stddev=0.000883], oderiv-count=1.13467e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11789, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.13,0.17,0.22 0.27,0.35,0.55,0.85,1.0 1.2,1.4,1.5,1.9), mean=0.615, stddev=0.31], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.46,0.51,0.57 0.63,0.71,0.86,1.0,1.1 1.2,1.3,1.3,1.5), mean=0.866, stddev=0.185]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02057, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.93,0.93,0.93 0.93,0.93,0.93,0.93,0.93 0.93,0.93,0.93,0.93), mean=0.931, stddev=0.000913], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.19,0.20 0.21,0.21,0.23,0.25,0.26 0.27,0.28,0.29,0.38), mean=0.232, stddev=0.0202], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03868, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.55,0.56,0.57 0.58,0.59,0.62,0.64,0.66 0.67,0.68,0.68,0.72), mean=0.618, stddev=0.0291], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.24, stddev=0.0312], bias-{mean,stddev}=-0.008186,0.6056, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.28e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.16,0.20,0.24 0.30,0.38,0.61,0.93,1.1 1.3,1.4,1.6,2.0), mean=0.664, stddev=0.322], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.17,0.19,0.23 0.27,0.34,0.48,0.63,0.71 0.76,0.81,0.84,0.91), mean=0.487, stddev=0.162], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.004 0.004,0.004,0.005,0.006), mean=0.00266, stddev=0.000668], oderiv-count=1.0825e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11277, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.17,0.19,0.24 0.29,0.38,0.59,0.89,1.1 1.2,1.4,1.5,1.9), mean=0.642, stddev=0.303], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.53,0.55,0.62 0.67,0.75,0.90,1.1,1.2 1.2,1.3,1.4,1.6), mean=0.91, stddev=0.186]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, params-rms=0.02745, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88), mean=0.878, stddev=0.000913], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.38,0.39,0.40 0.41,0.42,0.44,0.46,0.47 0.48,0.48,0.49,0.52), mean=0.439, stddev=0.024], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03894, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.55,0.56,0.58 0.58,0.60,0.62,0.65,0.66 0.67,0.68,0.69,0.72), mean=0.622, stddev=0.0293], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3), mean=1.25, stddev=0.0295], bias-{mean,stddev}=-0.009196,0.6166, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.36e+05, self-repaired-proportion=0.00136075, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.12,0.17 0.24,0.33,0.56,0.87,1.1 1.3,1.5,1.6,2.0), mean=0.621, stddev=0.339], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.10,0.13,0.19 0.24,0.31,0.46,0.62,0.70 0.77,0.83,0.87,0.92), mean=0.468, stddev=0.176], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.007,0.008,0.01), mean=0.00343, stddev=0.00128], oderiv-count=1.10334e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11277, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.10,0.13,0.18 0.24,0.33,0.55,0.85,1.0 1.2,1.5,1.6,1.9), mean=0.605, stddev=0.32], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.39,0.47,0.54 0.64,0.73,0.92,1.1,1.2 1.2,1.3,1.4,1.7), mean=0.91, stddev=0.214]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, params-rms=0.02617, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.837, stddev=0.00136], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.35,0.36,0.37 0.38,0.39,0.42,0.44,0.46 0.46,0.48,0.49,0.53), mean=0.418, stddev=0.0288], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11277, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6e-08,-5e-08,-4e-08,-4e-08 -3e-08,-2e-08,6e-10,2e-08,3e-08 3e-08,4e-08,5e-08,6e-08), mean=5.04e-10, stddev=1.99e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.1,1.1,1.1 1.1,1.2,1.2,1.3,1.3 1.3,1.4,1.4,1.4), mean=1.22, stddev=0.0723]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3800, learning-rate=0.000867504, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.0184, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-10,4e-10,4e-10,4e-10 0.01,0.03,0.27,0.42,0.45 0.48,0.50,0.51,0.56), mean=0.239, stddev=0.172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.84,0.88,0.95 1.0,1.0,1.1,1.2,1.3 1.3,1.3,1.4,1.5), mean=1.13, stddev=0.108], bias-{mean,stddev}=0.0005471,0.07847, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03734, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.52,0.53,0.55 0.56,0.57,0.60,0.62,0.63 0.64,0.66,0.66,0.68), mean=0.597, stddev=0.0298], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.1,1.1 1.2,1.2,1.2,1.2,1.2 1.2,1.3,1.3,1.3), mean=1.19, stddev=0.0294], bias-{mean,stddev}=0.000464,0.5956, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.21e+05, self-repaired-proportion=0.00955656, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.09,0.13,0.18 0.23,0.31,0.49,0.78,1.0 1.2,1.4,1.5,2.2), mean=0.563, stddev=0.312], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.10,0.14,0.20 0.25,0.33,0.49,0.67,0.76 0.82,0.86,0.90,0.99), mean=0.496, stddev=0.191], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.001,0.001,0.001 0.001,0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.03), mean=0.00219, stddev=0.00202], oderiv-count=1.09566e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11277, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.09,0.12,0.19 0.23,0.30,0.48,0.75,0.97 1.1,1.3,1.5,2.0), mean=0.542, stddev=0.295], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.35,0.42,0.49 0.54,0.61,0.72,0.86,0.94 1.0,1.1,1.1,1.5), mean=0.732, stddev=0.165]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000867504, l2-regularize=0.008, max-change=0.75, params-rms=0.02155, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69), mean=0.69, stddev=0.000546], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.27,0.28,0.29 0.31,0.32,0.35,0.37,0.38 0.39,0.39,0.40,0.42), mean=0.344, stddev=0.0277], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11277, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-3e-08,-3e-08,-2e-08 -2e-08,-1e-08,5e-10,1e-08,2e-08 2e-08,3e-08,3e-08,5e-08), mean=3.07e-10, stddev=1.39e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.64,0.65,0.65 0.66,0.68,0.72,0.77,0.79 0.82,0.83,0.85,0.92), mean=0.729, stddev=0.0517]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3800, learning-rate=0.00433752, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.04008, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.03 0.03,0.03,0.58,0.91,1.0 1.1,1.1,1.2,1.5), mean=0.494, stddev=0.408], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.0,2.1,2.1,2.2 2.3,2.3,2.4,2.6,2.7 2.8,2.8,2.9,2.9), mean=2.46, stddev=0.177], bias-{mean,stddev}=-4.015e-09,0.1127, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=3800, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,6e-05,0.0005,0.001,0.002 0.003,0.004,0.004,0.05), mean=0.000839, stddev=0.0012], oderiv-count=1.11341e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/4.mdl 
LOG (nnet3-show-progress[5.5.1009~1-e4940]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:4.70682 tdnnf2.linear:2.28937 tdnnf2.affine:3.82858 tdnnf3.linear:2.10788 tdnnf3.affine:3.62759 tdnnf4.linear:1.95783 tdnnf4.affine:3.7142 tdnnf5.linear:1.65818 tdnnf5.affine:3.50738 tdnnf6.linear:1.89158 tdnnf6.affine:3.52038 tdnnf7.linear:1.8719 tdnnf7.affine:3.60685 tdnnf8.linear:1.85732 tdnnf8.affine:3.62961 tdnnf9.linear:1.81798 tdnnf9.affine:3.58782 tdnnf10.linear:1.79428 tdnnf10.affine:3.58849 tdnnf11.linear:1.77511 tdnnf11.affine:3.63088 tdnnf12.linear:1.77173 tdnnf12.affine:3.58324 tdnnf13.linear:1.78179 tdnnf13.affine:3.57382 prefinal-l:1.98239 prefinal-chain.affine:3.59005 prefinal-chain.linear:1.78819 output.affine:3.78841 prefinal-xent.affine:3.52811 prefinal-xent.linear:1.4665 output-xent.affine:5.71882 ]
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:26.9947 tdnnf2.linear:12.0358 tdnnf2.affine:27.1482 tdnnf3.linear:10.2881 tdnnf3.affine:27.0516 tdnnf4.linear:9.59003 tdnnf4.affine:28.1456 tdnnf5.linear:8.61771 tdnnf5.affine:27.3247 tdnnf6.linear:9.27592 tdnnf6.affine:26.8324 tdnnf7.linear:9.39181 tdnnf7.affine:27.7488 tdnnf8.linear:9.48224 tdnnf8.affine:27.9936 tdnnf9.linear:9.63503 tdnnf9.affine:27.7164 tdnnf10.linear:9.76926 tdnnf10.affine:27.8403 tdnnf11.linear:9.99131 tdnnf11.affine:28.2025 tdnnf12.linear:10.2131 tdnnf12.affine:27.8106 tdnnf13.linear:10.5342 tdnnf13.affine:27.7112 prefinal-l:14.0539 prefinal-chain.affine:28.0492 prefinal-chain.linear:13.3982 output.affine:18.7854 prefinal-xent.affine:26.9959 prefinal-xent.linear:11.0341 output-xent.affine:40.1343 ]
LOG (nnet3-show-progress[5.5.1009~1-e4940]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.156107 tdnnf2.linear:0.189335 tdnnf2.affine:0.126383 tdnnf3.linear:0.200241 tdnnf3.affine:0.119836 tdnnf4.linear:0.196913 tdnnf4.affine:0.117857 tdnnf5.linear:0.183065 tdnnf5.affine:0.114394 tdnnf6.linear:0.196349 tdnnf6.affine:0.117237 tdnnf7.linear:0.192693 tdnnf7.affine:0.11619 tdnnf8.linear:0.190338 tdnnf8.affine:0.115947 tdnnf9.linear:0.184242 tdnnf9.affine:0.115832 tdnnf10.linear:0.180137 tdnnf10.affine:0.115403 tdnnf11.linear:0.175111 tdnnf11.affine:0.115347 tdnnf12.linear:0.171914 tdnnf12.affine:0.115507 tdnnf13.linear:0.168654 tdnnf13.affine:0.115605 prefinal-l:0.140943 prefinal-chain.affine:0.114688 prefinal-chain.linear:0.130919 output.affine:0.219786 prefinal-xent.affine:0.11688 prefinal-xent.linear:0.132111 output-xent.affine:0.150879 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Wed Jun 15 03:14:21 UTC 2022, elapsed time 1 seconds
